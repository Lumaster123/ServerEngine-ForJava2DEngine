/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package serverengine;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.net.ServerSocket;
import javax.swing.DefaultListModel;
import javax.swing.JPanel;
import serverengine.engineTools.ThreadHandler;

/**
 *
 * @author MLZBook
 */
public class Window extends javax.swing.JFrame {

    public DefaultListModel<String> clientItemNameList;
    
    /**
     * Creates new form Window
     */
    public Window(ServerSocket server) {
        initComponents();
         
        clientItemNameList = new DefaultListModel<>();
        
        setResizable(true);
        setLocationRelativeTo(null);
        setMinimumSize(new Dimension(700,400));
        
        itemList.setModel(clientItemNameList);
        itemList.addMouseListener(new MouseListener() {
            
            boolean isClicked = false;
            
            @Override
            public void mouseClicked(MouseEvent e) {
                if(e.getButton() == MouseEvent.BUTTON1){
                    if(isClicked){
                        if(itemList.getSelectedValue() != null){
                            System.out.println(itemList.getSelectedValue());
                            tabbedPanel.addTab(itemList.getSelectedValue(), new JPanel(null));
                        }
                    }else{
                        isClicked = true;
                        ThreadHandler.invokeLater("mouseEventDoubleClickResetThread", 450, new Runnable() {
                            @Override
                            public void run() {
                                isClicked = false;
                            }
                        });
                    }
                }
            }

            @Override
            public void mousePressed(MouseEvent e) {
                
            }

            @Override
            public void mouseReleased(MouseEvent e) {
                
            }

            @Override
            public void mouseEntered(MouseEvent e) {
                
            }

            @Override
            public void mouseExited(MouseEvent e) {
                
            }
        });
        
        ipaddress_value.setText(server.getInetAddress().toString());
        
        
        
        setVisible(true);
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        clientList = new javax.swing.JScrollPane();
        itemList = new javax.swing.JList<>();
        connectedClients_text = new javax.swing.JLabel();
        serverInfos_text = new javax.swing.JLabel();
        infoPanel = new javax.swing.JPanel();
        ipaddress_text = new javax.swing.JLabel();
        ipaddress_value = new javax.swing.JLabel();
        tabbedPanel = new javax.swing.JTabbedPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Server");

        itemList.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        itemList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        clientList.setViewportView(itemList);
        itemList.getAccessibleContext().setAccessibleName("clientList");

        connectedClients_text.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        connectedClients_text.setText("Connected Clients");

        serverInfos_text.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        serverInfos_text.setText("Server Infos:");

        ipaddress_text.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        ipaddress_text.setText("IP-Adresse:");

        ipaddress_value.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        ipaddress_value.setText("ERROR");

        javax.swing.GroupLayout infoPanelLayout = new javax.swing.GroupLayout(infoPanel);
        infoPanel.setLayout(infoPanelLayout);
        infoPanelLayout.setHorizontalGroup(
            infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ipaddress_text)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ipaddress_value)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        infoPanelLayout.setVerticalGroup(
            infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ipaddress_text)
                    .addComponent(ipaddress_value))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        ipaddress_text.getAccessibleContext().setAccessibleName("ipaddress_text");
        ipaddress_value.getAccessibleContext().setAccessibleName("ipaddress_value");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(connectedClients_text)
                    .addComponent(serverInfos_text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(clientList))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(infoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tabbedPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 1223, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(serverInfos_text)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(connectedClients_text)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clientList, javax.swing.GroupLayout.DEFAULT_SIZE, 764, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(infoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tabbedPanel)))
                .addContainerGap())
        );

        clientList.getAccessibleContext().setAccessibleName("clientScrollPane");
        infoPanel.getAccessibleContext().setAccessibleName("infoPanel");

        getAccessibleContext().setAccessibleName("frame");

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane clientList;
    private javax.swing.JLabel connectedClients_text;
    private javax.swing.JPanel infoPanel;
    private javax.swing.JLabel ipaddress_text;
    private javax.swing.JLabel ipaddress_value;
    private javax.swing.JList<String> itemList;
    private javax.swing.JLabel serverInfos_text;
    private javax.swing.JTabbedPane tabbedPanel;
    // End of variables declaration//GEN-END:variables
}
